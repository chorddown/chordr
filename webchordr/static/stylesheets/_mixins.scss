@import "variables";

@mixin clearfix() {
    &::before,
    &::after {
        clear: both;
        content: '';
        display: table-cell;
    }
}

@mixin apply-styles($styles) {
    color: map-get($styles, font-color);
    font-weight: map-get($styles, font-weight);
    font-style: map-get($styles, font-style);
    background: map-get($styles, background);
    margin: map-get($styles, margin);
    @include apply-block-styles($styles);
}

@mixin apply-block-styles($styles) {
    $color: map-get($styles, block-color);
    $width: map-get($styles, block-width);
    @if $width > 0 and $color != transparent {
        border-left: $width $color solid;
        @if map-has-key($styles, block-style) {
            border-left-style: map-get($styles, block-style);
        }
        padding: 0 $std-half;
    }
}

@mixin if-dark-mode {
    @media screen and (prefers-color-scheme: dark) {
        @content;
    }
    @at-root html.dark-mode & {
        @content;
    }
}

@mixin print-hidden {
    @media print {
        display: none !important;
    }
}

/// Mixin for Song detail tools (like transpose and setlist tool)
@mixin song-tool() {
    margin-bottom: $std-half;
    &:last-child {
        margin-bottom: 0;
    }
}

@mixin button($display: block) {
    display: $display;
    appearance: none;
    line-height: $button-line-height;
    font-size: $button-font-size;
    font-family: $ui-font;
    text-decoration: none;

    &:focus,
    &:hover {
        outline: none;
    }
}

@mixin button-default($padding: $button-padding, $border: $button-border, $width: 100%) {
    background: var(--button-bg);
    border: $border;
    color: var(--button-color);
    width: $width;
    padding: $padding;
    text-align: center;
    letter-spacing: $button-letter-spacing;
    cursor: pointer;

    &:focus,
    &:hover {
        color: var(--button-hover-color);
        background: var(--button-hover-bg);
        //color: $button-hover-color;
        //background: $button-hover-bg;
    }

    //@include if-dark-mode {
    //    background: $dark-mode-button-bg;
    //    color: $dark-mode-button-color;
    //
    //    &:focus,
    //    &:hover {
    //        color: $dark-mode-button-hover-color;
    //        background: $dark-mode-button-hover-bg;
    //    }
    //}
}

@mixin button-disabled($padding: $button-padding, $border: $button-border, $width: 100%) {
    background: var(--control-disabled-bg);
    border: $border;
    color: var(--control-disabled-color);
    width: $width;
    padding: $padding;
    text-align: center;
    letter-spacing: $button-letter-spacing;
    cursor: pointer;

    &:focus,
    &:hover {
        color: var(--control-disabled-hover-color);
        background: var(--control-disabled-hover-bg);
    }
}

@mixin assign-variables($prefix, $styles) {
    @each $key, $value in $styles {
        --#{$prefix}-#{$key}: #{$value};
    }
}

@mixin icon($content: normal) {
    &::before {
        content: $content;
        display: inline-block;
        font-weight: normal;
        font-variant: normal;
        font-style: normal;
        font-family: 'iconmonstr-iconic-font';
        font-size: 1em;
        line-height: 1;
        vertical-align: bottom;
        text-rendering: auto;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }
}
