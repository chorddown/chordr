(function () {
    'use strict';

    function copy() {
        try {
            return document.execCommand('copy');
        } catch (err) {
            return false;
        }
    }

    function select(target) {
        if (typeof target.select === 'function') {
            target.select();
            return true;
        } else {
            return false;
        }
    }

    /**
     * @param {HTMLElement} element
     * @param {number} triesLeft
     * @returns {null|Element}
     */
    function getClipboardButtonTarget(element, triesLeft) {
        if (typeof element.dataset.clipboardTarget === 'string') {
            try {
                return document.querySelector(element.dataset.clipboardTarget)
            } catch (e) {
                return null;
            }
        }

        if (triesLeft > 0 && element.parentElement) {
            return getClipboardButtonTarget(element.parentElement, triesLeft - 1)
        } else {
            return null;
        }
    }

    /* Initialize */
    function initialize$1() {
        document.addEventListener('click', function (e) {
            const target = getClipboardButtonTarget(e.target, 4);
            if (target) {
                try {
                    if (select(target)) {
                        copy();
                    }
                } catch (e) {
                }
            }
        });
    }

    const threshold = 5;
    const detachThreshold = 50;
    const classList = document.documentElement.classList;

    let lastScrollPosition = 0.0;
    let lastScrollDirection = undefined;
    let isAttached = false;

    /* Initialize */
    function initialize() {
        document.addEventListener('DOMContentLoaded', function () {
            addScrollClasses();
            window.addEventListener("scroll", throttle(addScrollClasses), {passive: true});
        });
    }

    function addScrollClasses() {
        const currentScrollPosition = window.scrollY;
        checkIfAttached(currentScrollPosition);
        checkDirection(currentScrollPosition);
    }

    function checkIfAttached(currentScrollPosition) {
        if (currentScrollPosition < detachThreshold) {
            if (!isAttached) {
                classList.add('attached');
                classList.remove('detached');
                isAttached = true;
            }
        } else {
            if (isAttached) {
                classList.remove('attached');
                classList.add('detached');
                isAttached = false;
            }
        }
    }

    function checkDirection(currentScrollPosition) {
        let scrollDirection = '';
        const diff = lastScrollPosition - currentScrollPosition;
        if (Math.abs(diff) > threshold) {
            if (diff > 0) {
                scrollDirection = 'direction-up';
            } else {
                scrollDirection = 'direction-down';
            }

            if (lastScrollDirection !== scrollDirection) {
                classList.remove(lastScrollDirection);
                classList.add(scrollDirection);
                lastScrollDirection = scrollDirection;
            }
        }
        lastScrollPosition = currentScrollPosition;
    }

    function throttle(callback, limit) {
        let waiting = false;
        return function () {
            if (!waiting) {
                callback.apply(this, arguments);
                waiting = true;
                setTimeout(function () {
                    waiting = false;
                }, limit || 20);
            }
        }
    }

    /*! The file bundle.js will be generated by Rollup */

    (function () {
        initialize$1();
        initialize();
    })();

})();
